// Code generated by mockery v2.30.1. DO NOT EDIT.

package mocks

import (
	context "context"
	pb_user "project_T4/pb_user"

	mock "github.com/stretchr/testify/mock"
)

// UserBankAdapter is an autogenerated mocks type for the UserBankAdapter type
type UserBankAdapter struct {
	mock.Mock
}

// GetUser provides a mocks function with given fields: ctx, in
func (_m *UserBankAdapter) GetUser(ctx context.Context, in *pb_user.GetUserRequest) (*pb_user.GetUserResponse, error) {
	ret := _m.Called(ctx, in)

	var r0 *pb_user.GetUserResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *pb_user.GetUserRequest) (*pb_user.GetUserResponse, error)); ok {
		return rf(ctx, in)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *pb_user.GetUserRequest) *pb_user.GetUserResponse); ok {
		r0 = rf(ctx, in)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb_user.GetUserResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *pb_user.GetUserRequest) error); ok {
		r1 = rf(ctx, in)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewUserBankAdapter creates a new instance of UserBankAdapter. It also registers a testing interface on the mocks and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewUserBankAdapter(t interface {
	mock.TestingT
	Cleanup(func())
}) *UserBankAdapter {
	mock := &UserBankAdapter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
